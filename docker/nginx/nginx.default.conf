user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;

events { worker_connections  1024; }

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    upstream backend {
        server app:8000;
    }

    # Map OpenSSL reported curve list to a synthetic hybrid group label (MVP)
    map $ssl_curves $pqc_group {
        default "X25519Kyber768"; # placeholder; real hybrid via oqs-provider build
    }

    log_format handshake 'ts="$time_local" ip="$remote_addr" sni="$ssl_server_name" '
                        'proto="$ssl_protocol" cipher="$ssl_cipher" alpn="$ssl_alpn_protocol" '
                        'curves="$ssl_curves" group="$pqc_group"';

    access_log /var/log/nginx/handshake.log handshake;

    server {
        listen 443 ssl;
        ssl_certificate     /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;
        ssl_protocols       TLSv1.3;  # enforce TLS 1.3 only (hybrid focus)

        location / {
            proxy_set_header X-TLS-Protocol $ssl_protocol;
            proxy_set_header X-TLS-Cipher   $ssl_cipher;
            proxy_set_header X-TLS-Group    $pqc_group;
            proxy_set_header X-ALPN         $ssl_alpn_protocol;
            proxy_set_header X-TLS-SNI      $ssl_server_name;
            proxy_pass http://backend;
        }
    }
}
