worker_processes auto;
error_log /var/log/nginx/error.log info;

events { worker_connections 1024; }

http {
  upstream app_upstream {
    server app:8080;
    keepalive 16;
  }

  # Allow larger auth/PCH headers (Authorization + PCH-*); 4 buffers of 8k each.
  large_client_header_buffers 4 8k;

  server {
    listen 443 ssl;
    server_name _;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    # Enforce OpenSSL provider (loaded via openssl.cnf) and TLS 1.3 hybrid/PQC groups
    # Discover names: `openssl list -groups -provider oqsprovider`
    ssl_protocols TLSv1.3;
    ssl_conf_command Options -Groups "X25519Kyber768:X25519:P-256";

    # Optional mTLS
    # ssl_client_certificate /etc/nginx/certs/ca.crt;
    # ssl_verify_client optional;

    # Telemetry headers for control-plane ingestion
    proxy_set_header X-TLS-Protocol $ssl_protocol;
    proxy_set_header X-TLS-Cipher   $ssl_cipher;
    proxy_set_header X-TLS-SNI      $ssl_server_name;
  # Align header names with control plane extractor (expects x-tls-alpn)
  proxy_set_header X-TLS-ALPN     $ssl_alpn;
    proxy_set_header X-TLS-Group    $ssl_curve;
  # Expose underlying TLS session id for PCH channel binding (may be empty for some handshakes)
  proxy_set_header X-TLS-Session-ID $ssl_session_id;

    location / {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
  # Preserve original host & scheme for signature authority component and evidence
  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://app_upstream;
    }
  }
}
